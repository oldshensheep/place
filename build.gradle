plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.18'
    id 'java'
}

group = 'com.oldshensheep'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.hibernate.orm:hibernate-community-dialects'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.xerial:sqlite-jdbc'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

processResources {
    from ('frontend') {
        into 'public'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

graalvmNative {
    metadataRepository {
        enabled = true
    }
    binaries {
        main {
            buildArgs.add('--enable-preview')
            buildArgs.add('--verbose')
            buildArgs.add('--native-image-info')
            buildArgs.add('--enable-monitoring=jfr')
        }
    }
}
